<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!--  어노테이션의 활성화  -->
	<annotation-driven />
	<default-servlet-handler/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!--  컨트롤러가 처리할 필요없이 해당 위치의 디렉터리에서 바로 접근할 수 있다  -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- gson 빈 등록 -->
	<beans:bean class="com.google.gson.Gson"></beans:bean>
	
	<!-- multipartResolver 빈으로 등록 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="1000000"/>  <!-- 최대 업로드 가능한크기, -1은 제한없음이다 -->
		<!-- <beans:property name="maxInMemorySize" value="10000000"/> ::디스크에 임시파일을 생성하기 전에 메모리에 보관할수있는 최대바이트크기 -->
<!-- 		<beans:property name="uploadTempDir" />  잘 사용안함. 왜냐면 경로를 수동저장하기 때문에 , 자동이아님 -->
		<!-- defaultEncoding -->
		<beans:property name="defaultEncoding" value="utf-8"/> <!-- 캐릭터셋 -->
	</beans:bean>
	 
	<!--  아래 패키지를 스캔하며 어노테이션이  달린것을 빈으로 생성하여 컨테이너에 담아둔다  -->
	<context:component-scan base-package="team4.controller.front" />
	<context:component-scan base-package="team4.services.auth" />
	<context:component-scan base-package="team4.services.share" />
	<context:component-scan base-package="team4.services.schedule" />
	
</beans:beans>
