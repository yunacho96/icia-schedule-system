<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<bean id="hikari" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver"/>
		<property name="jdbcUrl"
			value="jdbc:oracle:thin:@106.243.194.229:3333:xe"/>
		<property name="username" value="CYN"/>
		<property name="password" value="1234"/>
	</bean>
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikari" />
	</bean>
	<bean id="dbSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
	<!-- mybatis가 시작하는 곳의 클래스 이름   -->
		<property name="dataSource" ref="dataSource"/>
		
		<!--  configLocation 추가해보기  -->
	</bean>
	<bean id="dbSession" class="org.mybatis.spring.SqlSessionTemplate">  <!-- 세션의 생명주기를 관리한다.  -->
		<constructor-arg name="sqlSessionFactory" ref="dbSessionFactory"/>
	</bean>
	<!-- Transaction -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  <!-- 세션의 생명주기를 관리한다.  -->
		<constructor-arg name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven/>
	
	<!-- Java sendMail -->
	<bean id="javaMail" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com"/>
		<property name="port" value="465" />
		<property name="username" value="dbsk9520"/>
		<property name="password" value="ajdcjd^^010"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtps.ssl.checkserverindentity">true</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtps.ssl.trust">*</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>	
			</props>
		</property>
	</bean>
	

	
	<!-- 나중에 처리할것  
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	-->
	
	<!-- 매퍼 연결 시켜놓기 -->
	<mybatis-spring:scan base-package="team4.database.mapper"/>

</beans>
